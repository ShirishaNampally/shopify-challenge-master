{"version":3,"sources":["containers/error.svg","containers/back.svg","containers/plus.svg","containers/minus.svg","containers/search.svg","components/cross.svg","types.js","store.js","reducer.js","queryStrings.js","actions.js","containers/MovieDetail.js","containers/Home.js","components/Movie.js","containers/Nomination.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","types","FETCH_MOVIES_FAILED","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_PENDING","GET_MOVIE_DETAILS_PENDING","GET_MOVIE_DETAILS_SUCCESS","GET_MOVIE_DETAILS_FAILED","NOMINATE_MOVIE","REMOVE_NOMINATED_MOVIE","store","createStore","combineReducers","fetchMovies","state","loading","data","err","action","type","payload","movieDetails","nominations","movies","filter","item","applyMiddleware","thunk","setQueryStringWithoutPageReload","qsValue","newurl","window","location","protocol","host","pathname","history","pushState","path","getIDSfromQuery","key","queryString","search","obj","qs","parse","split","nominateMovie","id","dispatch","getState","length","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","value","values","push","newQsValue","stringify","join","addIDtoQuery","removeNominatedMovie","removeIDfromQuery","MovieDetail","showContent","props","className","size","color","src","errorSVG","alt","backSVG","onClick","goBack","Title","Plot","Actors","Awards","Director","Genre","Released","imdbRating","includes","style","backgroundColor","imdbID","this","getMovieDetails","flex","React","Component","connect","a","axios","get","response","MovieText","showDetails","alreadyNominated","Year","minusSVG","plusSVG","Home","map","movie","setState","searchTerm","searchSVG","autoFocus","onChange","e","target","placeholder","onKeyDown","keyCode","Error","Search","Movie","borderColor","num","crossSVG","top","right","Nomination","copyURLtoClipboard","navigator","clipboard","writeText","href","copied","setTimeout","i","App","newestOnTop","transition","Slide","rtl","pauseOnFocusLoss","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.009054cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.6315845c.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.c2e4f1c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.1c7775bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.f448ccd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.35e7ec75.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.d79a8310.svg\";","const types = {\r\n  FETCH_MOVIES_FAILED: \"LOADING_MOVIES_FAILED\",\r\n  FETCH_MOVIES_SUCCESS: \"LOADING_MOVIES_SUCCESS\",\r\n  FETCH_MOVIES_PENDING: \"FETCH_MOVIES_PENDING\",\r\n  GET_MOVIE_DETAILS_PENDING: \"GET_MOVIE_DETAILS_PENDING\",\r\n  GET_MOVIE_DETAILS_SUCCESS: \"GET_MOVIE_DETAILS_SUCCESS\",\r\n  GET_MOVIE_DETAILS_FAILED: \"GET_MOVIE_DETAILS_FAILED\",\r\n  NOMINATE_MOVIE: \"NOMINATE_MOVIE\",\r\n  REMOVE_NOMINATED_MOVIE: \"REMOVE_NOMINATED_MOVIE\",\r\n};\r\n\r\nexport default types;\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { fetchMovies, movieDetails, nominations } from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  combineReducers({ fetchMovies, movieDetails, nominations }),\r\n  {},\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import types from \"./types\";\r\n\r\nconst fetchMovies = (\r\n  state = { loading: false, data: [], err: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case types.FETCH_MOVIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n        err: null,\r\n      };\r\n\r\n    case types.FETCH_MOVIES_PENDING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        err: null,\r\n      };\r\n\r\n    case types.FETCH_MOVIES_FAILED:\r\n      return {\r\n        ...state,\r\n        err: action.err,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst movieDetails = (\r\n  state = { loading: false, data: {}, err: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case types.GET_MOVIE_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n        err: null,\r\n      };\r\n\r\n    case types.GET_MOVIE_DETAILS_PENDING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        err: null,\r\n      };\r\n\r\n    case types.GET_MOVIE_DETAILS_FAILED:\r\n      return {\r\n        ...state,\r\n        err: action.err,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst nominations = (\r\n  state = {\r\n    movies: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case types.NOMINATE_MOVIE:\r\n      return {\r\n        ...state,\r\n        movies: [...state.movies, action.payload],\r\n      };\r\n    case types.REMOVE_NOMINATED_MOVIE:\r\n      return {\r\n        ...state,\r\n        movies: state.movies.filter((item) => item !== action.payload),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { fetchMovies, movieDetails, nominations };\r\n","import qs from \"query-string\";\r\n\r\nexport const setQueryStringWithoutPageReload = (qsValue) => {\r\n  const newurl =\r\n    window.location.protocol +\r\n    \"//\" +\r\n    window.location.host +\r\n    window.location.pathname +\r\n    qsValue;\r\n  window.history.pushState({ path: newurl }, \"\", newurl);\r\n};\r\n\r\nexport const getIDSfromQuery = (key, queryString = window.location.search) => {\r\n  const obj = qs.parse(queryString);\r\n  return (obj[key] && obj[key].split(\",\")) || [];\r\n};\r\n\r\nexport const addIDtoQuery = (key, value) => {\r\n  const values = getIDSfromQuery(key);\r\n  values.push(value);\r\n  const newQsValue = qs.stringify({\r\n    [key]: values.join(\",\"),\r\n  });\r\n  setQueryStringWithoutPageReload(`?${newQsValue}`);\r\n};\r\n\r\nexport const removeIDfromQuery = (key, value) => {\r\n  const values = getIDSfromQuery(key);\r\n  const newQsValue = qs.stringify({\r\n    [key]: values.filter((id) => id !== value).join(\",\"),\r\n  });\r\n  setQueryStringWithoutPageReload(`?${newQsValue}`);\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport store from \"./store\";\r\nimport types from \"./types\";\r\nimport { addIDtoQuery, removeIDfromQuery } from \"./queryStrings.js\";\r\n\r\n// Actions\r\nconst fetchMovies = (searchTerm) => async (dispatch) => {\r\n  dispatch({ type: types.FETCH_MOVIES_PENDING });\r\n  try {\r\n    const response = await axios.get(\r\n      `https://www.omdbapi.com/?s=${searchTerm}&type=movie&r=json&apikey=e1592641`\r\n    );\r\n    if (response.data.Error) throw new Error(response.data.Error);\r\n    dispatch({\r\n      type: types.FETCH_MOVIES_SUCCESS,\r\n      payload: response.data.Search,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.FETCH_MOVIES_FAILED,\r\n      err: error,\r\n    });\r\n  }\r\n};\r\n\r\nconst getMovieDetails = (id) => async (dispatch) => {\r\n  dispatch({ type: types.GET_MOVIE_DETAILS_PENDING });\r\n  try {\r\n    const response = await axios.get(\r\n      `https://www.omdbapi.com/?i=${id}&type=movie&r=json&plot=short&apikey=e1592641`\r\n    );\r\n    dispatch({\r\n      type: types.GET_MOVIE_DETAILS_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.FETCH_MOVIES_FAILED,\r\n      err: error,\r\n    });\r\n  }\r\n};\r\n\r\nconst nominateMovie = (id) => (dispatch) => {\r\n  if (store.getState().nominations.movies.length === 5)\r\n    toast.warn(\"You have nominated 05 movies\", {\r\n      position: \"top-center\",\r\n      autoClose: 3000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: false,\r\n      draggable: false,\r\n      progress: undefined,\r\n    });\r\n  else {\r\n    addIDtoQuery(\"movies\", id);\r\n    dispatch({\r\n      type: types.NOMINATE_MOVIE,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n\r\nconst removeNominatedMovie = (id) => {\r\n  removeIDfromQuery(\"movies\", id);\r\n  return {\r\n    type: types.REMOVE_NOMINATED_MOVIE,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport {\r\n  fetchMovies,\r\n  nominateMovie,\r\n  getMovieDetails,\r\n  removeNominatedMovie,\r\n  types,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovieDetails, nominateMovie } from \"../actions\";\r\nimport backSVG from \"./back.svg\";\r\nimport errorSVG from \"./error.svg\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nclass MovieDetail extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getMovieDetails(this.props.id);\r\n  }\r\n\r\n  showContent = () => {\r\n    if (this.props.movieDetails.loading)\r\n      return (\r\n        <div className=\"flex justify-center mt-32\">\r\n          <ClipLoader\r\n            size={30}\r\n            color={\"#fff\"}\r\n            loading={this.props.movieDetails.loading}\r\n          />\r\n        </div>\r\n      );\r\n\r\n    if (this.props.movieDetails.err)\r\n      return (\r\n        <div className=\"flex flex-col justify-center mt-32\">\r\n          <img src={errorSVG} className=\"h-10\" alt=\"Error\" />\r\n          <p className=\"text-center mt-3\">Error!</p>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n      <div className=\"mx-auto w-3/4\">\r\n        <img\r\n          src={backSVG}\r\n          alt=\"Go back\"\r\n          className=\"h-5 cursor-pointer my-5\"\r\n          onClick={this.props.goBack}\r\n        />\r\n\r\n        <img\r\n          src={`https://img.omdbapi.com/?apikey=e1592641&i=${this.props.id}`}\r\n          alt=\"movie poster\"\r\n          className=\"img object-cover w-56 h-64 rounded\"\r\n        ></img>\r\n\r\n        <h3 className=\"font-bold text-3xl py-5 text-white\">\r\n          {this.props.movieDetails.data.Title}\r\n        </h3>\r\n        <table className=\"table-auto\">\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"block uppercase tracking-wide  text-xs font-bold w-1/4 mr-4\">\r\n                Plot\r\n              </td>\r\n              <td className=\"pb-3\">{this.props.movieDetails.data.Plot}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"block uppercase tracking-wide  text-xs font-bold w-1/4 mr-4\">\r\n                Actors\r\n              </td>\r\n              <td className=\"pb-3\">{this.props.movieDetails.data.Actors}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"block uppercase tracking-wide  text-xs font-bold w-1/4 mr-4\">\r\n                Awards\r\n              </td>\r\n              <td className=\"pb-3\">{this.props.movieDetails.data.Awards}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"block uppercase tracking-wide  text-xs font-bold w-1/4 mr-4\">\r\n                Director\r\n              </td>\r\n              <td className=\"pb-3\">{this.props.movieDetails.data.Director}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"block uppercase tracking-wide  text-xs font-bold w-1/4 mr-4\">\r\n                Genre\r\n              </td>\r\n              <td className=\"pb-3\">{this.props.movieDetails.data.Genre}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"block uppercase tracking-wide  text-xs font-bold w-1/4 mr-4\">\r\n                Released\r\n              </td>\r\n              <td className=\"pb-3\">{this.props.movieDetails.data.Released}</td>\r\n            </tr>\r\n            <tr>\r\n              <td className=\"block uppercase tracking-wide  text-xs font-bold w-1/4 mr-4\">\r\n                Rating\r\n              </td>\r\n              <td className=\"pb-3\">\r\n                {this.props.movieDetails.data.imdbRating}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {this.props.nominations.includes(this.props.id) ? (\r\n          <button\r\n            className=\"text-white mt-5 font-bold py-2 px-4 border-none rounded outline-none focus:outline-none focus:border-none opacity-50 cursor-not-allowed\"\r\n            style={{ backgroundColor: \"#262630\" }}\r\n          >\r\n            Already nominated\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"text-white mt-5 font-bold py-2 px-4 border-none rounded outline-none focus:outline-none focus:border-none\"\r\n            style={{ backgroundColor: \"#0687ff\" }}\r\n            onClick={() => {\r\n              this.props.nominateMovie(this.props.movieDetails.data.imdbID);\r\n            }}\r\n          >\r\n            Nominate\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-5\" style={{ flex: 2 }}>\r\n        {this.showContent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movieDetails: state.movieDetails,\r\n  nominations: state.nominations.movies,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getMovieDetails: (id) => dispatch(getMovieDetails(id)),\r\n  nominateMovie: (id) => dispatch(nominateMovie(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMovies, removeNominatedMovie } from \"../actions\";\r\nimport MovieDetail from \"./MovieDetail\";\r\nimport plusSVG from \"./plus.svg\";\r\nimport minusSVG from \"./minus.svg\";\r\nimport { nominateMovie } from \"../actions\";\r\nimport searchSVG from \"./search.svg\";\r\nimport errorSVG from \"./error.svg\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nfunction MovieText({\r\n  data,\r\n  showDetails,\r\n  nominateMovie,\r\n  alreadyNominated,\r\n  removeNominatedMovie,\r\n}) {\r\n  return (\r\n    <div className=\"mb-1 flex justify-between items-center rounded py-3 px-5 border-2 movie-text\">\r\n      <div>\r\n        <h2 className=\"text-xl cursor-pointer\" onClick={showDetails}>\r\n          {data.Title}\r\n          <span className=\"text-xs ml-2\" style={{ color: \"#b5bbc9\" }}>\r\n            ({data.Year})\r\n          </span>\r\n        </h2>\r\n      </div>\r\n      {alreadyNominated ? (\r\n        <img\r\n          src={minusSVG}\r\n          alt=\"Delete movie\"\r\n          className=\"h-4 cursor-pointer\"\r\n          onClick={() => removeNominatedMovie(data.imdbID)}\r\n        />\r\n      ) : (\r\n        <img\r\n          src={plusSVG}\r\n          alt=\"Add movie\"\r\n          className=\"h-4 cursor-pointer\"\r\n          onClick={() => nominateMovie(data.imdbID)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { searchTerm: \"\", showDetails: false, id: null };\r\n  }\r\n\r\n  showContent = () => {\r\n    if (this.props.movies.loading)\r\n      return (\r\n        <div className=\"flex justify-center mt-10\">\r\n          <ClipLoader\r\n            size={30}\r\n            color={\"#fff\"}\r\n            loading={this.props.movies.loading}\r\n          />\r\n        </div>\r\n      );\r\n\r\n    if (this.props.movies.err)\r\n      return (\r\n        <div className=\"flex flex-col justify-center mt-10\">\r\n          <img src={errorSVG} className=\"h-10\" alt=\"Error\" />\r\n\r\n          <p className=\"text-center mt-3\">Error!</p>\r\n        </div>\r\n      );\r\n\r\n    return (\r\n      <div className=\"mt-5 mx-auto\">\r\n        {this.props.movies.data.map((movie) => (\r\n          <MovieText\r\n            key={movie.imdbID}\r\n            data={movie}\r\n            showDetails={() =>\r\n              this.setState({ showDetails: true, id: movie.imdbID })\r\n            }\r\n            alreadyNominated={this.props.nominations.includes(movie.imdbID)}\r\n            removeNominatedMovie={this.props.removeNominatedMovie}\r\n            nominateMovie={(id) => this.props.nominateMovie(id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    if (this.state.showDetails)\r\n      return (\r\n        <MovieDetail\r\n          id={this.state.id}\r\n          goBack={() => this.setState({ showDetails: false, id: null })}\r\n        />\r\n      );\r\n\r\n    return (\r\n      <div style={{ flex: 2 }}>\r\n        <div className=\"md:w-1/2 sm:w-3/4 mt-5 mx-auto\">\r\n          <h1 className=\"uppercase tracking-wide block text-3xl font-semibold\">\r\n            S h o p p i e  s\r\n          </h1>\r\n          <div\r\n            className=\"w-full mt-10 rounded py-3 px-5 flex items-center\"\r\n            style={{ backgroundColor: \"#262630\" }}\r\n          >\r\n            <img src={searchSVG} className=\"h-6\" alt=\"Search\" />\r\n            <input\r\n              autoFocus={true}\r\n              className=\"placeholder border-none bg-transparent ml-5 flex-1 text-2xl text-white outline-none focus:outline-none focus:border-none\"\r\n              value={this.state.searchTerm}\r\n              onChange={(e) => this.setState({ searchTerm: e.target.value })}\r\n              placeholder=\"Search Movies\"\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13)\r\n                  this.props.fetchMovies(this.state.searchTerm);\r\n              }}\r\n            />\r\n          </div>\r\n          {this.showContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movies: state.fetchMovies,\r\n  nominations: state.nominations.movies,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchMovies: (searchTerm) => dispatch(fetchMovies(searchTerm)),\r\n  nominateMovie: (id) => dispatch(nominateMovie(id)),\r\n  removeNominatedMovie: (id) => dispatch(removeNominatedMovie(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeNominatedMovie } from \"../actions\";\r\nimport crossSVG from \"./cross.svg\";\r\n\r\nclass Movie extends React.Component {\r\n  render() {\r\n    if (this.props.placeholder)\r\n      return (\r\n        <div\r\n          className=\"w-40 h-48 border-dashed border-2 m-2 flex items-center justify-center rounded\"\r\n          style={{ borderColor: \"#262630\" }}\r\n        >\r\n          <p className=\"text-2xl\" style={{ color: \"#262630\" }}>\r\n            {this.props.num}\r\n          </p>\r\n        </div>\r\n      );\r\n    return (\r\n      <div className=\"m-2\" style={{ position: \"relative\" }}>\r\n        <img\r\n          src={`https://img.omdbapi.com/?apikey=e1592641&i=${this.props.id}`}\r\n          className=\"object-cover w-40 h-48 rounded\"\r\n          alt=\"movie poster\"\r\n        ></img>\r\n        <img\r\n          src={crossSVG}\r\n          className=\"h-5 cursor-pointer\"\r\n          alt=\"close button\"\r\n          onClick={() => this.props.removeNominatedMovie(this.props.id)}\r\n          style={{ position: \"absolute\", top: -7, right: -7 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  removeNominatedMovie: (id) => dispatch(removeNominatedMovie(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Movie);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Movie from \"../components/Movie\";\r\nimport {\r\n  getIDSfromQuery,\r\n  setQueryStringWithoutPageReload,\r\n} from \"../queryStrings\";\r\nimport { nominateMovie } from \"../actions\";\r\n\r\nclass Nomination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { copied: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const values = getIDSfromQuery(\"movies\");\r\n    setQueryStringWithoutPageReload(\"?\");\r\n    values.map((id) => this.props.nominateMovie(id));\r\n  }\r\n\r\n  copyURLtoClipboard = () => {\r\n    navigator.clipboard.writeText(window.location.href);\r\n    this.setState({ copied: true });\r\n    setTimeout(() => {\r\n      this.setState({ copied: false });\r\n    }, 2000);\r\n  };\r\n\r\n  render() {\r\n    const movies = [];\r\n    let i = 0;\r\n    for (; i < this.props.movies.length; i++) {\r\n      movies.push(<Movie id={this.props.movies[i]} />);\r\n    }\r\n    for (; i < 5; i++) {\r\n      movies.push(<Movie placeholder={true} num={i + 1} />);\r\n    }\r\n\r\n    return (\r\n      <div className=\"flex-1 flex flex-col p-5\">\r\n        <button\r\n          style={{ backgroundColor: \"#000\" }}\r\n          className=\"text-white font-bold py-2 px-4 border-none rounded outline-none focus:outline-none focus:border-none self-end\"\r\n          onClick={this.copyURLtoClipboard}\r\n        >\r\n          {this.state.copied ? \"Copied!\" : \"Share\"}\r\n        </button>\r\n        <h1 className=\"block text-2xl font-italicbold\">Nominations</h1>\r\n        <div className=\"flex flex-wrap mt-5\">{movies}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movies: state.nominations.movies,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  nominateMovie: (id) => dispatch(nominateMovie(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nomination);\r\n","import React from \"react\";\r\nimport Home from \"./containers/Home\";\r\nimport Nomination from \"./containers/Nomination\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\nimport { ToastContainer, Slide } from \"react-toastify\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        transition={Slide}\r\n        rtl={false}\r\n        pauseOnFocusLoss={false}\r\n        draggable={false}\r\n        pauseOnHover={false}\r\n      />\r\n      <Home />\r\n      <Nomination />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}